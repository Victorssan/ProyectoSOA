WEBVTT

1
00:00:01.170 --> 00:00:02.310
- Muy bien, así que usted ha aprendido

2
00:00:02.310 --> 00:00:05.370
acerca de los usuarios de IAM, grupos y políticas.

3
00:00:05.370 --> 00:00:07.890
Las políticas se pueden aplicar a las identidades de AWS

4
00:00:07.890 --> 00:00:10.770
como usuarios y grupos para asignar permisos.

5
00:00:10.770 --> 00:00:14.640
También, sin embargo, se pueden aplicar a otra identidad de AWS,

6
00:00:14.640 --> 00:00:16.200
roles de IAM.

7
00:00:16.200 --> 00:00:18.120
Un rol de IAM es una identidad

8
00:00:18.120 --> 00:00:20.880
que puede ser asumida por alguien o algo

9
00:00:20.880 --> 00:00:24.450
que necesita acceso temporal a las credenciales de AWS.

10
00:00:24.450 --> 00:00:28.290
Profundicemos en lo que quiero decir cuando hablo de credenciales de AWS.

11
00:00:28.290 --> 00:00:30.240
La mayoría de las llamadas a la API de AWS que se realizan

12
00:00:30.240 --> 00:00:32.370
deben estar firmadas y autenticadas,

13
00:00:32.370 --> 00:00:34.740
pero ¿cómo funciona ese proceso?

14
00:00:34.740 --> 00:00:37.770
Cuando envía una solicitud HTTP a AWS

15
00:00:37.770 --> 00:00:39.810
debe firmar la solicitud.

16
00:00:39.810 --> 00:00:42.120
Este proceso de firma se realiza mediante programación

17
00:00:42.120 --> 00:00:44.790
y permite a AWS verificar su identidad

18
00:00:44.790 --> 00:00:46.170
cuando se realiza una solicitud

19
00:00:46.170 --> 00:00:48.750
y pasar por varios procesos de seguridad

20
00:00:48.750 --> 00:00:51.300
para garantizar que una solicitud es legítima.

21
00:00:51.300 --> 00:00:53.340
Los usuarios de IAM tienen credenciales asociadas

22
00:00:53.340 --> 00:00:56.550
como un ID de clave de acceso y una clave de acceso secreta

23
00:00:56.550 --> 00:00:58.740
que se utilizan para firmar las solicitudes.

24
00:00:58.740 --> 00:01:01.920
Sin embargo, en lo que respecta a nuestra arquitectura,

25
00:01:01.920 --> 00:01:04.020
el código que se ejecuta en la instancia de EC2

26
00:01:04.020 --> 00:01:06.960
necesita firmar la solicitud enviada a S3.

27
00:01:06.960 --> 00:01:09.120
Ya le he dicho que no tengo intención

28
00:01:09.120 --> 00:01:10.860
de que cree un usuario IAM

29
00:01:10.860 --> 00:01:13.200
con credenciales para que las utilice esta aplicación,

30
00:01:13.200 --> 00:01:15.630
así que ¿cómo obtendrá la aplicación acceso

31
00:01:15.630 --> 00:01:17.850
al ID de clave de acceso de AWS necesario

32
00:01:17.850 --> 00:01:21.180
y a la clave de acceso secreta de AWS para firmar la llamada a la API?

33
00:01:21.180 --> 00:01:23.910
La respuesta son los roles IAM.

34
00:01:23.910 --> 00:01:27.810
Los roles IAM son identidades en AWS que al igual que un usuario IAM

35
00:01:27.810 --> 00:01:32.580
también tienen asociadas credenciales de AWS que se utilizan para firmar solicitudes.

36
00:01:32.580 --> 00:01:35.820
Sin embargo, los usuarios IAM tienen nombres de usuario y contraseñas

37
00:01:35.820 --> 00:01:37.980
así como credenciales estáticas

38
00:01:37.980 --> 00:01:41.610
mientras que los roles IAM no tienen credenciales de acceso

39
00:01:41.610 --> 00:01:43.530
como un nombre de usuario y una contraseña

40
00:01:43.530 --> 00:01:45.480
y las credenciales utilizadas para firmar las solicitudes

41
00:01:45.480 --> 00:01:48.690
se adquieren mediante programación, son de naturaleza temporal,

42
00:01:48.690 --> 00:01:51.150
y se rotan automáticamente.

43
00:01:51.150 --> 00:01:54.270
En nuestro ejemplo, a la instancia EC2 se le asignará

44
00:01:54.270 --> 00:01:55.860
un rol IAM.

45
00:01:55.860 --> 00:01:58.140
Este rol puede ser asumido entonces por la aplicación

46
00:01:58.140 --> 00:02:00.536
que se ejecuta en la máquina virtual para obtener acceso a sus

47
00:02:00.536 --> 00:02:05.160
credenciales temporales para firmar las llamadas a la API de AWS que se realicen.

48
00:02:05.160 --> 00:02:07.500
Un rol puede ser asumido por muchas identidades diferentes

49
00:02:07.500 --> 00:02:09.660
y tienen muchos casos de uso.

50
00:02:09.660 --> 00:02:11.370
Lo importante que hay que saber sobre los roles

51
00:02:11.370 --> 00:02:14.010
es que las credenciales que proporcionan caducan

52
00:02:14.010 --> 00:02:16.470
y los roles se asumen de forma programática.

53
00:02:16.470 --> 00:02:17.580
Para hacernos una idea de esto,

54
00:02:17.580 --> 00:02:21.240
vamos a crear un rol utilizando la consola de AWS.

55
00:02:21.240 --> 00:02:22.320
Ya he iniciado sesión

56
00:02:22.320 --> 00:02:24.930
y navegaré hasta el servicio IAM.

57
00:02:24.930 --> 00:02:27.420
Ahora quiero crear el rol que la instancia EC2

58
00:02:27.420 --> 00:02:30.870
va a utilizar para la aplicación del directorio de empleados.

59
00:02:30.870 --> 00:02:33.270
Ahora, haremos clic en Roles en la parte izquierda

60
00:02:33.270 --> 00:02:35.400
y seleccionaremos Crear rol.

61
00:02:35.400 --> 00:02:37.530
A continuación, seleccionaremos la entidad de confianza

62
00:02:37.530 --> 00:02:39.720
para la que se va a utilizar este rol,

63
00:02:39.720 --> 00:02:42.630
y en nuestro caso será EC2,

64
00:02:42.630 --> 00:02:44.910
y después haremos clic en Siguiente.

65
00:02:44.910 --> 00:02:48.030
Ahora tenemos que seleccionar los permisos asignados a este rol.

66
00:02:48.030 --> 00:02:50.250
De nuevo, los permisos son las acciones

67
00:02:50.250 --> 00:02:53.430
que esta identidad tiene autoridad para realizar

68
00:02:53.430 --> 00:02:55.530
Queremos que esta identidad sea capaz de leer

69
00:02:55.530 --> 00:02:59.520
y escribir en Amazon S3, así que buscaré S3

70
00:02:59.520 --> 00:03:01.800
y puede ver que hay múltiples opciones aquí

71
00:03:01.800 --> 00:03:04.710
para políticas pre-escritas que puedo elegir.

72
00:03:04.710 --> 00:03:07.440
También puedo escribir mi propia política personalizada

73
00:03:07.440 --> 00:03:11.580
que también aparecería aquí si la creara con antelación.

74
00:03:11.580 --> 00:03:14.790
Voy a seleccionar acceso completo a S3 para la política.

75
00:03:14.790 --> 00:03:16.290
En el mundo real usted elegiría

76
00:03:16.290 --> 00:03:18.900
una política IAM más restrictiva para esto

77
00:03:18.900 --> 00:03:20.400
pero para una prueba de concepto

78
00:03:20.400 --> 00:03:22.290
como la que este curso pretende proporcionar,

79
00:03:22.290 --> 00:03:25.770
dejaremos los permisos un poco más sueltos por ahora.

80
00:03:25.770 --> 00:03:27.840
Usted volvería y cambiaría los permisos,

81
00:03:27.840 --> 00:03:29.910
adjuntaría este rol para ser más granular

82
00:03:29.910 --> 00:03:31.440
si esto llegara alguna vez a hacerlo

83
00:03:31.440 --> 00:03:33.600
a un entorno de tipo de producción.

84
00:03:33.600 --> 00:03:36.090
Ahora también necesitamos añadir otro permiso aquí,

85
00:03:36.090 --> 00:03:37.830
y es para DynamoDB.

86
00:03:37.830 --> 00:03:40.200
Así que saldré del filtro S3

87
00:03:40.200 --> 00:03:43.890
y luego escribiré DynamoDB y pulsaré Intro.

88
00:03:43.890 --> 00:03:44.880
Y luego seleccionaremos

89
00:03:44.880 --> 00:03:48.690
el permiso AmazonDynamoDBFullAccess.

90
00:03:48.690 --> 00:03:50.820
Luego haremos clic en Siguiente.

91
00:03:50.820 --> 00:03:52.350
Luego podemos darle un nombre a este rol,

92
00:03:52.350 --> 00:03:55.980
que es EmployeeWebAppRole.

93
00:03:55.980 --> 00:04:00.063
Luego podemos desplazarnos hacia abajo y podemos hacer clic en Crear rol.

94
00:04:03.540 --> 00:04:06.510
Podemos ver que este rol ahora ha sido creado con éxito

95
00:04:06.510 --> 00:04:09.360
y si hacemos clic en el rol y nos desplazamos hacia abajo,

96
00:04:09.360 --> 00:04:13.410
entonces podemos ver que este rol tiene dos permisos adjuntos.

97
00:04:13.410 --> 00:04:15.360
Es muy común que los roles se utilicen

98
00:04:15.360 --> 00:04:18.210
para el acceso entre los servicios de AWS.

99
00:04:18.210 --> 00:04:21.810
Sólo porque dos recursos existen en la misma cuenta de AWS,

100
00:04:21.810 --> 00:04:23.490
no significa que puedan enviar

101
00:04:23.490 --> 00:04:25.920
cualquier llamada API entre sí.

102
00:04:25.920 --> 00:04:28.860
Si un servicio de AWS necesita enviar una llamada de API

103
00:04:28.860 --> 00:04:32.190
a otro servicio de AWS, lo más probable es que utilice

104
00:04:32.190 --> 00:04:36.210
el acceso basado en roles, donde el servicio de AWS asume un rol,

105
00:04:36.210 --> 00:04:38.340
obtiene acceso a las credenciales contemporáneas

106
00:04:38.340 --> 00:04:41.850
y luego envía la llamada de API a los otros servicios de AWS

107
00:04:41.850 --> 00:04:44.760
que luego verifican la solicitud.

108
00:04:44.760 --> 00:04:47.070
Otra identidad que puede asumir un rol de IAM

109
00:04:47.070 --> 00:04:51.780
para obtener acceso a AWS son los proveedores de identidad externos.

110
00:04:51.780 --> 00:04:53.550
Por ejemplo, supongamos que tiene una empresa

111
00:04:53.550 --> 00:04:56.400
que emplea a 5.000 empleados técnicos

112
00:04:56.400 --> 00:04:59.790
que necesitan todos acceso a cuentas de AWS.

113
00:04:59.790 --> 00:05:02.730
Ya dispone de un sistema de proveedor de identidad

114
00:05:02.730 --> 00:05:05.460
que permite a estos empleados iniciar sesión en sus portátiles

115
00:05:05.460 --> 00:05:08.640
y obtener acceso a varios recursos corporativos.

116
00:05:08.640 --> 00:05:12.000
¿Debería ir ahora también a crear 5.000 usuarios IAM

117
00:05:12.000 --> 00:05:14.370
para que estos empleados accedan a AWS?

118
00:05:14.370 --> 00:05:16.890
Bueno, eso no suena muy eficiente.

119
00:05:16.890 --> 00:05:19.080
En su lugar, puede aprovechar los roles IAM

120
00:05:19.080 --> 00:05:21.270
para conceder acceso a las identidades existentes

121
00:05:21.270 --> 00:05:23.430
de su directorio de usuarios empresariales.

122
00:05:23.430 --> 00:05:26.201
Estos se conocen como usuarios federados.

123
00:05:26.201 --> 00:05:28.590
AWS asigna un rol a un usuario federado

124
00:05:28.590 --> 00:05:32.040
cuando se solicita acceso a través de un proveedor de identidades.

125
00:05:32.040 --> 00:05:35.430
También disponemos de servicios AWS que pueden facilitar este proceso

126
00:05:35.430 --> 00:05:38.640
como el Centro de Identidades IAM de AWS.

127
00:05:38.640 --> 00:05:42.660
Estos son un par de ejemplos de acceso basado en roles en AWS

128
00:05:42.660 --> 00:05:44.910
y esto es sólo la introducción.

129
00:05:44.910 --> 00:05:47.040
Consulte las lecturas de la clase para obtener más información

130
00:05:47.040 --> 00:05:50.730
y no se preocupe si aún no comprende del todo este concepto

131
00:05:50.730 --> 00:05:53.790
ya que seguiremos utilizando roles en nuestras demostraciones y ejemplos

132
00:05:53.790 --> 00:05:54.940
a lo largo de este curso.