WEBVTT

1
00:00:01.500 --> 00:00:03.690
- Para nuestra aplicación de directorio de empleados,

2
00:00:03.690 --> 00:00:06.540
utilizaremos fotos de cada uno de nuestros empleados.

3
00:00:06.540 --> 00:00:09.060
Si sólo tenemos una copia de esas fotos

4
00:00:09.060 --> 00:00:10.800
y no queremos perderlas,

5
00:00:10.800 --> 00:00:13.290
tenemos que guardarlas en algún lugar seguro.

6
00:00:13.290 --> 00:00:15.840
Actualmente, la única copia de esas fotos

7
00:00:15.840 --> 00:00:17.610
está guardada en mi portátil.

8
00:00:17.610 --> 00:00:20.640
Pero si mi portátil se estropea, ¿qué ocurre?

9
00:00:20.640 --> 00:00:22.350
Se acabaron las fotos.

10
00:00:22.350 --> 00:00:24.660
Quiero asegurarme de que esto no ocurra,

11
00:00:24.660 --> 00:00:27.510
así que voy a subir las fotos a AWS

12
00:00:27.510 --> 00:00:29.400
para asegurarme de que las copias existen

13
00:00:29.400 --> 00:00:31.890
aunque mi portátil se destruya.

14
00:00:31.890 --> 00:00:35.280
Esto también me permite acceder a mis fotos desde cualquier lugar,

15
00:00:35.280 --> 00:00:40.260
mi casa, mi teléfono, un avión, en un tren, en todas partes.

16
00:00:40.260 --> 00:00:43.020
Cuando almaceno estas fotos en un servicio de AWS,

17
00:00:43.020 --> 00:00:45.300
lo estoy haciendo en un centro de datos en algún lugar,

18
00:00:45.300 --> 00:00:48.090
en servidores dentro de ese centro de datos.

19
00:00:48.090 --> 00:00:50.250
Pero si ocurre un desastre natural,

20
00:00:50.250 --> 00:00:52.590
como un extraterrestre que baja del espacio

21
00:00:52.590 --> 00:00:54.360
y destruye un centro de datos,

22
00:00:54.360 --> 00:00:56.220
entonces ¿qué hacemos?

23
00:00:56.220 --> 00:00:59.910
Por suerte, AWS ha planeado para este evento y muchos otros,

24
00:00:59.910 --> 00:01:01.470
incluyendo desastres naturales

25
00:01:01.470 --> 00:01:04.980
y otros accidentes alienígenas inevitables.

26
00:01:04.980 --> 00:01:08.460
La forma en que lo planean es a través de la redundancia.

27
00:01:08.460 --> 00:01:11.730
AWS tiene clusters de centros de datos en todo el mundo.

28
00:01:11.730 --> 00:01:14.850
Así que aquí AWS tendría un segundo centro de datos

29
00:01:14.850 --> 00:01:16.230
conectado al primero

30
00:01:16.230 --> 00:01:19.950
a través de enlaces redundantes de alta velocidad y baja latencia.

31
00:01:19.950 --> 00:01:22.680
De ese modo, si el primer centro de datos se cae,

32
00:01:22.680 --> 00:01:25.590
el segundo sigue funcionando.

33
00:01:25.590 --> 00:01:27.180
Esta agrupación de centros de datos

34
00:01:27.180 --> 00:01:31.350
se denomina zona de disponibilidad o AZ.

35
00:01:31.350 --> 00:01:34.260
Una AZ consta de uno o más centros de datos

36
00:01:34.260 --> 00:01:37.920
con alimentación, redes y conectividad redundantes.

37
00:01:37.920 --> 00:01:40.350
Por desgracia, a veces las catástrofes naturales

38
00:01:40.350 --> 00:01:42.420
como los huracanes u otros desastres

39
00:01:42.420 --> 00:01:45.423
también pueden llegar a afectar a toda una AZ,

40
00:01:46.260 --> 00:01:48.780
pero AWS también ha previsto esto,

41
00:01:48.780 --> 00:01:51.300
de nuevo, utilizando la redundancia.

42
00:01:51.300 --> 00:01:55.140
Al igual que los centros de datos, AWS también agrupa las AZ

43
00:01:55.140 --> 00:01:56.220
y también las conecta

44
00:01:56.220 --> 00:01:59.760
con enlaces redundantes de alta velocidad y baja latencia.

45
00:01:59.760 --> 00:02:03.420
Una agrupación de AZ se denomina simplemente región.

46
00:02:03.420 --> 00:02:06.630
En AWS, puede elegir la ubicación de sus recursos

47
00:02:06.630 --> 00:02:11.040
no sólo eligiendo una AZ, sino también una región.

48
00:02:11.040 --> 00:02:13.980
Las regiones suelen denominarse por su ubicación

49
00:02:13.980 --> 00:02:16.140
para que pueda saber fácilmente dónde se encuentran.

50
00:02:16.140 --> 00:02:18.810
Por ejemplo, podría poner las fotos de nuestros empleados

51
00:02:18.810 --> 00:02:21.090
en una región de Virginia del Norte

52
00:02:21.090 --> 00:02:23.610
llamada Región de Virginia del Norte.

53
00:02:23.610 --> 00:02:27.420
Así que sabiendo que hay muchas regiones de AWS en todo el mundo,

54
00:02:27.420 --> 00:02:30.060
¿cómo se elige una región de AWS?

55
00:02:30.060 --> 00:02:32.640
Como regla básica, hay cuatro aspectos

56
00:02:32.640 --> 00:02:36.540
que debe tener en cuenta a la hora de decidir qué región de AWS utilizar,

57
00:02:36.540 --> 00:02:40.800
conformidad, latencia, precio y disponibilidad del servicio.

58
00:02:40.800 --> 00:02:42.243
Empecemos por la conformidad.

59
00:02:43.110 --> 00:02:44.970
Antes que cualquier otro factor,

60
00:02:44.970 --> 00:02:48.210
debe fijarse primero en sus requisitos de conformidad.

61
00:02:48.210 --> 00:02:50.910
Puede que su aplicación, su empresa,

62
00:02:50.910 --> 00:02:52.350
o el país en el que vive

63
00:02:52.350 --> 00:02:55.200
le exijan manejar sus datos y recursos informáticos

64
00:02:55.200 --> 00:02:56.880
de una determinada manera.

65
00:02:56.880 --> 00:02:58.080
¿Tiene el requisito

66
00:02:58.080 --> 00:03:01.230
de que sus datos deben vivir dentro de los límites del Reino Unido?

67
00:03:01.230 --> 00:03:04.950
Entonces debe elegir la región de Londres, y punto.

68
00:03:04.950 --> 00:03:07.470
El resto de factores no importan.

69
00:03:07.470 --> 00:03:10.980
O si opera en Canadá, entonces puede que se le exija

70
00:03:10.980 --> 00:03:13.710
que opere dentro de la Región Central de Canadá.

71
00:03:13.710 --> 00:03:15.330
Pero si no tiene un cumplimiento

72
00:03:15.330 --> 00:03:18.690
o un control normativo que dicte su región,

73
00:03:18.690 --> 00:03:20.880
entonces puede fijarse en otros factores.

74
00:03:20.880 --> 00:03:22.950
Por ejemplo, las fotos de nuestros empleados

75
00:03:22.950 --> 00:03:25.140
no están restringidas por normativas,

76
00:03:25.140 --> 00:03:28.020
así que puedo seguir fijándome en el siguiente factor,

77
00:03:28.020 --> 00:03:29.163
que es la latencia.

78
00:03:30.150 --> 00:03:33.510
La latencia tiene que ver con lo cerca que están sus recursos informáticos

79
00:03:33.510 --> 00:03:35.250
de su base de usuarios.

80
00:03:35.250 --> 00:03:38.100
Si quiero que todos los empleados del mundo

81
00:03:38.100 --> 00:03:40.740
puedan ver las fotos de los empleados rápidamente,

82
00:03:40.740 --> 00:03:42.630
entonces debo colocar la infraestructura

83
00:03:42.630 --> 00:03:45.660
que aloja esas fotos cerca de mis empleados.

84
00:03:45.660 --> 00:03:48.990
Todos estamos limitados por la velocidad de la luz.

85
00:03:48.990 --> 00:03:50.610
Aplicado a su negocio,

86
00:03:50.610 --> 00:03:53.460
eso significa que si sus usuarios viven en Oregón,

87
00:03:53.460 --> 00:03:55.200
entonces tiene sentido ejecutar su aplicación

88
00:03:55.200 --> 00:03:57.060
en la Región de Oregón.

89
00:03:57.060 --> 00:03:59.010
Podría ejecutarla en la Región de Brasil,

90
00:03:59.010 --> 00:04:01.770
pero la latencia de Oregón a Brasil

91
00:04:01.770 --> 00:04:03.090
podría afectar a sus usuarios

92
00:04:03.090 --> 00:04:05.223
y crear un tiempo de carga más lento.

93
00:04:06.150 --> 00:04:08.550
Pero quizá realmente quiera ejecutar mi aplicación

94
00:04:08.550 --> 00:04:11.340
o almacenar las fotos de mis empleados en Brasil.

95
00:04:11.340 --> 00:04:14.250
Un problema con el que podría encontrarme es el de los precios,

96
00:04:14.250 --> 00:04:16.710
que es el siguiente factor del que hablaremos.

97
00:04:16.710 --> 00:04:19.230
Los precios pueden variar de una región a otra,

98
00:04:19.230 --> 00:04:21.300
así que puede ser que algunas regiones,

99
00:04:21.300 --> 00:04:22.980
como la de Sao Paulo,

100
00:04:22.980 --> 00:04:24.510
sean más caras que otras

101
00:04:24.510 --> 00:04:26.670
debido a las diferentes estructuras fiscales.

102
00:04:26.670 --> 00:04:30.450
Así que incluso si quisiera almacenar las fotos de mis empleados en Brasil,

103
00:04:30.450 --> 00:04:33.000
podría no tener sentido desde el punto de vista de la latencia

104
00:04:33.000 --> 00:04:34.713
o de los precios.

105
00:04:35.820 --> 00:04:36.750
Y por último,

106
00:04:36.750 --> 00:04:38.970
el cuarto factor que querrá tener en cuenta

107
00:04:38.970 --> 00:04:41.790
son los servicios que desea utilizar.

108
00:04:41.790 --> 00:04:45.570
A menudo, cuando creamos nuevos servicios o características en AWS,

109
00:04:45.570 --> 00:04:47.250
no desplegamos esos servicios

110
00:04:47.250 --> 00:04:50.190
a todas las regiones que tenemos de inmediato.

111
00:04:50.190 --> 00:04:52.770
Es decir, si desea comenzar a utilizar un nuevo servicio

112
00:04:52.770 --> 00:04:54.840
el primer día tras su lanzamiento,

113
00:04:54.840 --> 00:04:57.210
entonces querrá asegurarse de que funciona en la región

114
00:04:57.210 --> 00:05:00.270
en la que está pensando ejecutar su infraestructura.

115
00:05:00.270 --> 00:05:02.970
Para recapitular, las regiones, las zonas de disponibilidad,

116
00:05:02.970 --> 00:05:07.590
y los centros de datos existen de forma redundante y anidada.

117
00:05:07.590 --> 00:05:10.140
Hay centros de datos dentro de zonas de disponibilidad

118
00:05:10.140 --> 00:05:13.140
y zonas de disponibilidad dentro de regiones.

119
00:05:13.140 --> 00:05:14.910
¿Y cómo se elige una región?

120
00:05:14.910 --> 00:05:17.400
Fijándose en la conformidad, la latencia,

121
00:05:17.400 --> 00:05:20.160
los precios y la disponibilidad del servicio.

122
00:05:20.160 --> 00:05:23.040
Esos son los aspectos básicos, pero no es el final de la historia

123
00:05:23.040 --> 00:05:26.160
cuando se trata de la infraestructura global de AWS.

124
00:05:26.160 --> 00:05:28.170
También tenemos la Red Global Edge,

125
00:05:28.170 --> 00:05:32.460
que consta de ubicaciones Edge y cachés Edge regionales.

126
00:05:32.460 --> 00:05:34.860
Las ubicaciones Edge y los cachés Edge regionales

127
00:05:34.860 --> 00:05:38.010
se utilizan para almacenar en caché el contenido más cerca de los usuarios finales,

128
00:05:38.010 --> 00:05:40.050
reduciendo así la latencia.

129
00:05:40.050 --> 00:05:41.730
Considere este escenario.

130
00:05:41.730 --> 00:05:43.650
Usted es una empresa que aloja un sitio web

131
00:05:43.650 --> 00:05:47.070
para sus usuarios de todo el mundo.

132
00:05:47.070 --> 00:05:50.880
Aunque su sitio web está siendo descargado desde todas partes,

133
00:05:50.880 --> 00:05:55.880
está alojado en una región de AWS en Norteamérica, digamos Ohio.

134
00:05:56.580 --> 00:05:59.850
Sin el almacenamiento en caché, cada usuario tendría que enviar una solicitud

135
00:05:59.850 --> 00:06:03.270
a la región de Ohio donde se descargan los datos,

136
00:06:03.270 --> 00:06:05.010
y luego los datos serían devueltos

137
00:06:05.010 --> 00:06:08.250
al usuario y renderizados en su navegador.

138
00:06:08.250 --> 00:06:11.730
Si el usuario se encuentra en EE.UU. o en un país cercano,

139
00:06:11.730 --> 00:06:14.820
puede que no haya mucha latencia en este proceso.

140
00:06:14.820 --> 00:06:17.460
Sin embargo, si un usuario viene de un lugar

141
00:06:17.460 --> 00:06:20.340
que se encuentra lejos de la región de Ohio,

142
00:06:20.340 --> 00:06:22.410
entonces la latencia será mayor.

143
00:06:22.410 --> 00:06:24.960
La latencia es un gran obstáculo para muchos casos de uso,

144
00:06:24.960 --> 00:06:26.940
incluidas las aplicaciones web.

145
00:06:26.940 --> 00:06:29.130
Así que para reducir esta latencia,

146
00:06:29.130 --> 00:06:30.750
podría utilizar las ubicaciones Edge

147
00:06:30.750 --> 00:06:33.690
para almacenar en caché el contenido al que se accede con frecuencia.

148
00:06:33.690 --> 00:06:36.270
Cuando almacena en caché un contenido en una ubicación Edge,

149
00:06:36.270 --> 00:06:40.200
se aloja una copia en las ubicaciones Edge de todo el mundo.

150
00:06:40.200 --> 00:06:43.350
De ese modo, cuando un usuario vaya a recuperar esa información,

151
00:06:43.350 --> 00:06:45.720
procederá de la ubicación Edge más cercana,

152
00:06:45.720 --> 00:06:49.350
lo que reducirá enormemente la latencia para ese usuario.

153
00:06:49.350 --> 00:06:51.690
Puede utilizar servicios como Amazon CloudFront

154
00:06:51.690 --> 00:06:54.153
para almacenar en caché el contenido utilizando las ubicaciones Edge.